name: Validate CloudFormation on PR

on:
  pull_request:
    types: [opened, synchronize, closed]
    paths:
      - 'cloudformation/**'

permissions: 
  pull-requests: write
  contents: read

jobs:
  validate-cfn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Validate Cloudformation template
        run: |
          aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yml

      - name: Deploy our stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation create-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test

      - name: Comment on the PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `CloudFormation test stack deployed. Stack name: pr-test-stack-${{ github.event.pull_request.number}}`
            })
  cleanup-on-merge:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Install GitHub CLI
        run: sudo apt install gh -y

      - name: Check if PR was merged
        id: check_merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO="${{ github.repository }}"
          IS_MERGED=$(gh api repos/$REPO/pulls/$PR_NUMBER --jq '.merged')
          echo "merged=$IS_MERGED" >> $GITHUB_OUTPUT

      - name: Exit if not merged
        if: ${{ steps.check_merge.outputs.merged != 'true' }}
        run: |
          echo "PR was not merged. Skipping cleanup."
          exit 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Delete Test Stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation delete-stack --stack-name $stack_name